@page "/workingchallenge/manage"
@using Microsoft.AspNetCore.Components.Web.Virtualization


<div class="page-header text-align-center">
    @TextResources.APP_StringKeys_WorkingChallenge_Manage
</div>
<div class="pages-vacreq-add text-align-center">
    @if (IsMessageShown)
    {
        <MudAlert Severity="AlertSeverity"
                  Variant="Variant.Filled"
                  Class="rounded-0"
                  ShowCloseIcon="true"
                  CloseIconClicked="()=> IsMessageShown = false">
            <ul>
                @foreach (var text in MessageTexts)
                {
                    <li>
                        @text
                    </li>
                }
            </ul>
        </MudAlert>
    }
    <EditForm Model="Command"
              OnValidSubmit="OnValidSubmit"
              OnInvalidSubmit="OnInvalidSubmit">
        <DataAnnotationsValidator />
        <div class="form-group">
            <MudSelect @bind-Value="Command.DepartmentId"
                       Label="@TextResources.APP_StringKeys_Department"
                       Variant="Variant.Outlined"
                       Margin="Margin.Dense">
                @foreach (var department in Departments)
                {
                    <MudSelectItem Value="@department.Id">@department.Name</MudSelectItem>
                }
            </MudSelect>
        </div>
        <div class="form-group">
            <MudTextField @bind-Value="Command.Description"
                          Label="@TextResources.APP_StringKeys_Title"
                          Variant="Variant.Outlined"
                          Margin="Margin.Dense">
            </MudTextField>
        </div>
        <hr />
        <div style="max-height: 40vh;overflow-y: scroll;">
            @if (ShownWorkChallenges is not null
            && Command.DepartmentId != 0)
            {
                ShownWorkChallenges = AllWorkChallenges.Where(p => p.DepartmentId == Command.DepartmentId).ToList();

                <Virtualize Items="ShownWorkChallenges"
                            ItemSize="10"
                            OverscanCount="10"
                            Context="department">
                    <MudCard Outlined="true">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">@department.DepartmentName</MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudText Typo="Typo.body2">
                                <MaterialIcon IconName="@MaterialIconsHelper.Error"></MaterialIcon>
                                @department.Description
                            </MudText>
                        </MudCardContent>
                        <MudCardActions Class="text-align-center">
                            <button type="button"
                                    class="btn btn-danger"
                                    @onclick="async ()=> await OnDeleteWorkChallengeClick(department.Id)">
                                <MaterialIcon IconName="@MaterialIconsHelper.Delete"></MaterialIcon>
                            </button>
                        </MudCardActions>
                    </MudCard>
                </Virtualize>
            }
        </div>
        <button type="submit"
                class="btn btn-primary page-floating-button-bottom">
            <MaterialIcon IconName="@MaterialIconsHelper.Save"></MaterialIcon>
        </button>
        <button type="button"
                class="btn btn-warning page-floating-button-bottom"
                @onclick="()=> Command = new()">
            <MaterialIcon IconName="@MaterialIconsHelper.Refresh"></MaterialIcon>
        </button>
    </EditForm>
    <MudOverlay Visible="IsLoading"
                DarkBackground="true">
        @TextResources.APP_StringKeys_Loading
        <MudProgressCircular Color="Color.Primary"
                             Size="Size.Large"
                             Indeterminate="true" />
    </MudOverlay>
</div>